ComponentPackageManagerTestFixture_test_sendPackage_available_action_existing_fragment_Test::TestBody:  with packageManager=PackageManager{
    pendingEncodings:{}
    nextEncodingHandle: 0
    fragments: {
        0:PackageFragmentInfo{package: 6, action: 3, state: UNENCODED, offset: 0, len: 19}, 
    }
}
ComponentPackageManagerTestFixture_test_sendPackage_available_action_existing_fragment_Test::TestBody:  with mockComponentManager.mockLink=Link{
    linkId: mockLinkId
    connections: []
    actionQueue: [
        ActionInfo{action: Action{ id:3}, linkId: mockLinkId, encoding size: 1, fragments: [PackageFragmentInfo{package: 6, action: 3, state: UNENCODED, offset: 0, len: 19}, ], toBeRemoved: 0}, 
    ]
    packageQueue: [
        PackageInfo{ linkId: mockLinkId, sdkHandle: 6, pendingEncodeHandle: 3, packageFragments: [PackageFragmentInfo{package: 6, action: 3, state: UNENCODED, offset: 0, len: 19}, ] }, 
    ]
}
MockComponentManagerInternal::getConnection:  with connId=mockConnectionId
MockComponentManagerInternal::getLink:  with linkId=mockLinkId
ComponentPackageManagerTestFixture_test_sendPackage_available_action_existing_fragment_Test::TestBody:  with resp=PLUGIN_OK
ComponentPackageManagerTestFixture_test_sendPackage_available_action_existing_fragment_Test::TestBody:  with packageManager=PackageManager{
    pendingEncodings:{}
    nextEncodingHandle: 0
    fragments: {
        0:PackageFragmentInfo{package: 6, action: 3, state: UNENCODED, offset: 0, len: 19}, 
        1:PackageFragmentInfo{package: 7, action: 3, state: UNENCODED, offset: 0, len: 19}, 
    }
}
ComponentPackageManagerTestFixture_test_sendPackage_available_action_existing_fragment_Test::TestBody:  with mockComponentManager.mockLink=Link{
    linkId: mockLinkId
    connections: []
    actionQueue: [
        ActionInfo{action: Action{ id:3}, linkId: mockLinkId, encoding size: 1, fragments: [PackageFragmentInfo{package: 6, action: 3, state: UNENCODED, offset: 0, len: 19}, PackageFragmentInfo{package: 7, action: 3, state: UNENCODED, offset: 0, len: 19}, ], toBeRemoved: 0}, 
    ]
    packageQueue: [
        PackageInfo{ linkId: mockLinkId, sdkHandle: 6, pendingEncodeHandle: 3, packageFragments: [PackageFragmentInfo{package: 6, action: 3, state: UNENCODED, offset: 0, len: 19}, ] }, 
        PackageInfo{ linkId: mockLinkId, sdkHandle: 7, pendingEncodeHandle: 0, packageFragments: [PackageFragmentInfo{package: 7, action: 3, state: UNENCODED, offset: 0, len: 19}, ] }, 
    ]
}
