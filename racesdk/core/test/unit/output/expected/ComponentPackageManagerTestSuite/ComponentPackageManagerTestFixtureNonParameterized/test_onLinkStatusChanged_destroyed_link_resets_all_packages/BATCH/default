ComponentPackageManagerTestFixtureNonParameterized_test_onLinkStatusChanged_destroyed_link_resets_all_packages_Test::TestBody:  with packageManager=PackageManager{
    pendingEncodings:{
        4:EncodingInfo{ params: EncodingParameters{ linkId: , type: , encodePackage: 0, json: }, pendingEncodeHandle: 4, state: ENCODING }, 
    }
    nextEncodingHandle: 0
    fragments: {
        0:PackageFragmentInfo{package: 7, action: 42, state: ENQUEUED, offset: 0, len: 19}, 
        1:PackageFragmentInfo{package: 8, action: 43, state: ENCODING, offset: 0, len: 20}, 
    }
}
ComponentPackageManagerTestFixtureNonParameterized_test_onLinkStatusChanged_destroyed_link_resets_all_packages_Test::TestBody:  with mockComponentManager.mockLink=Link{
    linkId: mockLinkId
    connections: []
    actionQueue: [
        ActionInfo{action: Action{ id:42}, linkId: , encoding size: 1, fragments: [PackageFragmentInfo{package: 7, action: 42, state: ENQUEUED, offset: 0, len: 19}, ], toBeRemoved: 0}, 
        ActionInfo{action: Action{ id:43}, linkId: , encoding size: 1, fragments: [PackageFragmentInfo{package: 8, action: 43, state: ENCODING, offset: 0, len: 20}, ], toBeRemoved: 0}, 
    ]
    packageQueue: [
        PackageInfo{ linkId: mockLinkId, sdkHandle: 7, pendingEncodeHandle: 3, packageFragments: [PackageFragmentInfo{package: 7, action: 42, state: ENQUEUED, offset: 0, len: 19}, ] }, 
        PackageInfo{ linkId: mockLinkId, sdkHandle: 8, pendingEncodeHandle: 4, packageFragments: [PackageFragmentInfo{package: 8, action: 43, state: ENCODING, offset: 0, len: 20}, ] }, 
    ]
}
MockComponentManagerInternal::getLink:  with linkId=mockLinkId
MockRaceSdkComms::onPackageStatusChanged:  with handle=7, status=PACKAGE_FAILED_GENERIC, timeout=-2147483648
MockRaceSdkComms::onPackageStatusChanged:  with handle=8, status=PACKAGE_FAILED_GENERIC, timeout=-2147483648
ComponentPackageManagerTestFixtureNonParameterized_test_onLinkStatusChanged_destroyed_link_resets_all_packages_Test::TestBody:  with packageManager=PackageManager{
    pendingEncodings:{}
    nextEncodingHandle: 0
    fragments: {}
}
ComponentPackageManagerTestFixtureNonParameterized_test_onLinkStatusChanged_destroyed_link_resets_all_packages_Test::TestBody:  with mockComponentManager.mockLink=Link{
    linkId: mockLinkId
    connections: []
    actionQueue: [
        ActionInfo{action: Action{ id:42}, linkId: , encoding size: 1, fragments: [], toBeRemoved: 0}, 
        ActionInfo{action: Action{ id:43}, linkId: , encoding size: 1, fragments: [], toBeRemoved: 0}, 
    ]
    packageQueue: []
}
